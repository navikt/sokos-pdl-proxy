plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.6.21'
    id 'com.github.johnrengelman.shadow' version '6.0.0'
    id 'org.hidetake.swagger.generator' version '2.18.2'
    id 'com.expediagroup.graphql' version '5.0.0-alpha.0'
    id 'org.betterplugin.avro' version "0.19.2-SNAPSHOT"
}

group = 'no.nav.sokos'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

final def logback_version = "1.3.0-alpha10"
final def kotlin_version = '1.6.21'
final def ktor_version = "1.6.3"
final def jackson_version = "2.9.8"
final def junit_version = "5.7.0"
final def mockk_version = "1.12.3"
final def prometheus_version = "1.7.3"
final def graphqlClientVersion = "5.0.0-alpha.3"
final def kotlin_logging_version = "2.0.11"
final def flyway_version = "8.5.10"
final def logstash_version = "6.6"
final def avroVersion = "1.10.2"
final def restAssuredVersion = "5.0.1"
final def swaggerRequestValidatorVersion = "2.27.2"


dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "io.ktor:ktor-client-apache:$ktor_version"
    implementation "io.ktor:ktor-client-json-jvm:$ktor_version"
    implementation "io.ktor:ktor-client-jackson:$ktor_version"
    implementation "io.ktor:ktor-client-logging-jvm:$ktor_version"
    implementation "io.ktor:ktor-jackson:$ktor_version"
    implementation "io.ktor:ktor-metrics-micrometer:$ktor_version"
    implementation "io.ktor:ktor-auth-jwt:$ktor_version"
    implementation "io.micrometer:micrometer-registry-prometheus:$prometheus_version"
    implementation "io.prometheus:simpleclient_hotspot:0.9.0"
    implementation "org.flywaydb:flyway-core:$flyway_version"
    implementation "ch.qos.logback:logback-core:$logback_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "net.logstash.logback:logstash-logback-encoder:$logstash_version"
    implementation "io.github.microutils:kotlin-logging-jvm:$kotlin_logging_version"

    implementation "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version"

    implementation("com.expediagroup:graphql-kotlin-ktor-client:$graphqlClientVersion") {
        exclude group: "com.expediagroup", module: "graphql-kotlin-client-serialization"
    }
    implementation "com.expediagroup:graphql-kotlin-client-jackson:$graphqlClientVersion"
    implementation "org.apache.avro:avro:$avroVersion"

    implementation 'ch.qos.logback:logback-core:1.2.3'
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'net.logstash.logback:logstash-logback-encoder:6.6'

    testImplementation "org.junit.jupiter:junit-jupiter:$junit_version"
    testImplementation "io.mockk:mockk:$mockk_version"
    //testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "io.ktor:ktor-server-tests:$ktor_version"
    testImplementation "io.ktor:ktor-client-tests:$ktor_version"
    testImplementation "com.willowtreeapps.assertk:assertk-jvm:0.25"

    testImplementation("io.rest-assured:rest-assured:$restAssuredVersion")
    testImplementation("com.atlassian.oai:swagger-request-validator-restassured:$swaggerRequestValidatorVersion")

    swaggerUI "org.webjars:swagger-ui:3.38.0"
}


test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions.jvmTarget = '17'
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '17'
}

shadowJar {
    archiveBaseName.set("app")
    manifest {
        attributes "Main-Class": "no.nav.sokos.pdl.proxy.BootstrapKt"
    }
    dependsOn(generateSwaggerUI)
}

swaggerSources {
    organisasjon_proxy {
        inputFile = file('spec/sokos-pdl-proxy-v1-swagger2.json')
        ui {
            outputDir = file("$buildDir/resources/main/api")
        }
    }
}

graphqlGenerateClient {
    packageName = "no.nav.pdl"
    schemaFile = file("$projectDir/src/main/resources/graphql/schema.graphql")
    queryFileDirectory = "$projectDir/src/main/resources/graphql"
}

build.dependsOn generateSwaggerUI